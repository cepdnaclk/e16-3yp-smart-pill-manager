{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "sites_SPM_functionapp_name": {
            "defaultValue": "SPM-functionapp",
            "type": "String"
        },
        "virtualMachines_spm_backend_name": {
            "defaultValue": "spm.backend",
            "type": "String"
        },
        "frontdoors_smartpillmanager_name": {
            "defaultValue": "smartpillmanager",
            "type": "String"
        },
        "virtualMachines_spm_frontend_name": {
            "defaultValue": "spm.frontend",
            "type": "String"
        },
        "serverfarms_ASP_forLearning_8b2d_name": {
            "defaultValue": "ASP-forLearning-8b2d",
            "type": "String"
        },
        "serverfarms_ASP_forLearning_9ba4_name": {
            "defaultValue": "ASP-forLearning-9ba4",
            "type": "String"
        },
        "dnszones_smartpillmanager_live_name": {
            "defaultValue": "smartpillmanager.live",
            "type": "String"
        },
        "components_SPM_getdata_function_name": {
            "defaultValue": "SPM-getdata-function",
            "type": "String"
        },
        "networkInterfaces_spm_backend140_name": {
            "defaultValue": "spm.backend140",
            "type": "String"
        },
        "networkInterfaces_spm_frontend92_name": {
            "defaultValue": "spm.frontend92",
            "type": "String"
        },
        "publicIPAddresses_spm_backend_ip_name": {
            "defaultValue": "spm.backend-ip",
            "type": "String"
        },
        "sshPublicKeys_spm_frontend_keypair_name": {
            "defaultValue": "spm.frontend.keypair",
            "type": "String"
        },
        "publicIPAddresses_spmfrontendip755_name": {
            "defaultValue": "spmfrontendip755",
            "type": "String"
        },
        "virtualNetworks_SPM_Virtual_Network_name": {
            "defaultValue": "SPM.Virtual.Network",
            "type": "String"
        },
        "networkSecurityGroups_spm_backend_nsg_name": {
            "defaultValue": "spm.backend-nsg",
            "type": "String"
        },
        "networkSecurityGroups_spmfrontendnsg249_name": {
            "defaultValue": "spmfrontendnsg249",
            "type": "String"
        },
        "frontdoorwebapplicationfirewallpolicies_SPMpolicy_name": {
            "defaultValue": "SPMpolicy",
            "type": "String"
        },
        "actionGroups_Application_Insights_Smart_Detection_name": {
            "defaultValue": "Application Insights Smart Detection",
            "type": "String"
        },
        "privateDnsZones_privatelink_mongo_cosmos_azure_com_name": {
            "defaultValue": "privatelink.mongo.cosmos.azure.com",
            "type": "String"
        },
        "dataCollectionRules_Microsoft_VMInsights_Health_centralus_name": {
            "defaultValue": "Microsoft-VMInsights-Health-centralus",
            "type": "String"
        },
        "disks_SPM_Frontend_OsDisk_1_2eb1c20648844fa0bd46782aaa401a12_name": {
            "defaultValue": "SPM.Frontend_OsDisk_1_2eb1c20648844fa0bd46782aaa401a12",
            "type": "String"
        },
        "smartdetectoralertrules_failure_anomalies___spm_getdata_function_name": {
            "defaultValue": "failure anomalies - spm-getdata-function",
            "type": "String"
        },
        "smartdetectoralertrules_failure_anomalies___spm_databse_trigger_function_name": {
            "defaultValue": "failure anomalies - spm-databse-trigger-function",
            "type": "String"
        },
        "components_spm_databse_trigger_function_externalid": {
            "defaultValue": "/subscriptions/b90d7ede-8d91-4884-96d9-122140ad1297/resourceGroups/forlearning/providers/microsoft.insights/components/spm-databse-trigger-function",
            "type": "String"
        },
        "workspaces_defaultworkspace_b90d7ede_8d91_4884_96d9_122140ad1297_cus_externalid": {
            "defaultValue": "/subscriptions/b90d7ede-8d91-4884-96d9-122140ad1297/resourceGroups/defaultresourcegroup-cus/providers/microsoft.operationalinsights/workspaces/defaultworkspace-b90d7ede-8d91-4884-96d9-122140ad1297-cus",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Compute/disks",
            "apiVersion": "2020-09-30",
            "name": "[parameters('disks_SPM_Frontend_OsDisk_1_2eb1c20648844fa0bd46782aaa401a12_name')]",
            "location": "centralus",
            "sku": {
                "name": "Premium_LRS",
                "tier": "Premium"
            },
            "zones": [
                "1"
            ],
            "properties": {
                "osType": "Linux",
                "hyperVGeneration": "V2",
                "creationData": {
                    "createOption": "FromImage",
                    "imageReference": {
                        "id": "/Subscriptions/b90d7ede-8d91-4884-96d9-122140ad1297/Providers/Microsoft.Compute/Locations/centralus/Publishers/Canonical/ArtifactTypes/VMImage/Offers/UbuntuServer/Skus/18_04-lts-gen2/Versions/18.04.202105120"
                    }
                },
                "diskSizeGB": 30,
                "diskIOPSReadWrite": 120,
                "diskMBpsReadWrite": 25,
                "encryption": {
                    "type": "EncryptionAtRestWithPlatformKey"
                },
                "diskState": "Unattached",
                "networkAccessPolicy": "AllowAll",
                "tier": "P4"
            }
        },
        {
            "type": "Microsoft.Compute/sshPublicKeys",
            "apiVersion": "2020-12-01",
            "name": "[parameters('sshPublicKeys_spm_frontend_keypair_name')]",
            "location": "centralus",
            "properties": {
                "publicKey": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDIyuSgzHi1Lg5dlbG/hcPG3eiy\r\nFGmbSYwFG/fZfui1dmFeijZdZ++mW9zEOyoanwhy6JoZsfCttflIVfcGLLsATZ4Z\r\naCrfU1eq8gT0/el23bKtYKp6XJgeOhxDOHcjq51Jn7X2yBIdph1116+6Wmha9WWx\r\nUko7Qc/IFnAlmMWGsmuTVV2MtT8uUsYyTU9llWt9HMZEYJ01H0tCbGmNApd6wiTi\r\nHYLLGHaLUeAZ/Y7XLa+9h1tOSooYpvW7ifKx1ykq2avNTDZFUjf60fNs2UalbSQj\r\nlMz0Qu+ddZ+8qS7oe4AT9oVLjfaL5lO/zOz0qD25L83pvFk73+svxGZ6vDnAz6E+\r\n+elb/JTdK6I1ZxsPme45xIxXplmkS7LGT2sCmIrA9TJtgl0Bes16iLi8pADEbuLm\r\nptQltpJPtqBnfd2iucDFhXwJRwFs9SRMARbmQ4EXmaaCrXCH9gx4itIJ51dIAAt0\r\nsqH53XxbpK+sxJFkm5Si/3zsY+iVkGOWm/824/s= generated-by-azure\r\n"
            }
        },
        {
            "type": "microsoft.insights/actionGroups",
            "apiVersion": "2019-06-01",
            "name": "[parameters('actionGroups_Application_Insights_Smart_Detection_name')]",
            "location": "Global",
            "properties": {
                "groupShortName": "SmartDetect",
                "enabled": true,
                "emailReceivers": [],
                "smsReceivers": [],
                "webhookReceivers": [],
                "itsmReceivers": [],
                "azureAppPushReceivers": [],
                "automationRunbookReceivers": [],
                "voiceReceivers": [],
                "logicAppReceivers": [],
                "azureFunctionReceivers": [],
                "armRoleReceivers": [
                    {
                        "name": "Monitoring Contributor",
                        "roleId": "749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "useCommonAlertSchema": true
                    },
                    {
                        "name": "Monitoring Reader",
                        "roleId": "43d0d8ad-25c7-4714-9337-8ba259a9fe05",
                        "useCommonAlertSchema": true
                    }
                ]
            }
        },
        {
            "type": "microsoft.insights/components",
            "apiVersion": "2020-02-02-preview",
            "name": "[parameters('components_SPM_getdata_function_name')]",
            "location": "centralus",
            "tags": {
                "hidden-link:/subscriptions/b90d7ede-8d91-4884-96d9-122140ad1297/resourceGroups/forLearning/providers/Microsoft.Web/sites/SPM-getdata-function": "Resource"
            },
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "Flow_Type": "Redfield",
                "Request_Source": "AppServiceEnablementCreate",
                "IngestionMode": "ApplicationInsights",
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
            }
        },
        {
            "type": "Microsoft.Insights/dataCollectionRules",
            "apiVersion": "2019-11-01-preview",
            "name": "[parameters('dataCollectionRules_Microsoft_VMInsights_Health_centralus_name')]",
            "location": "centralus",
            "properties": {
                "description": "Data collection rule for VM Insights health.",
                "dataSources": {
                    "performanceCounters": [
                        {
                            "streams": [
                                "Microsoft-Perf"
                            ],
                            "samplingFrequencyInSeconds": 60,
                            "counterSpecifiers": [
                                "\\LogicalDisk(*)\\% Free Space",
                                "\\Memory\\Available Bytes",
                                "\\Processor(_Total)\\% Processor Time"
                            ],
                            "name": "VMHealthPerfCounters"
                        }
                    ],
                    "extensions": [
                        {
                            "streams": [
                                "Microsoft-HealthStateChange"
                            ],
                            "extensionName": "HealthExtension",
                            "extensionSettings": {},
                            "inputDataSources": [
                                "VMHealthPerfCounters"
                            ],
                            "name": "Microsoft-VMInsights-Health"
                        }
                    ]
                },
                "destinations": {
                    "logAnalytics": [
                        {
                            "workspaceResourceId": "[parameters('workspaces_defaultworkspace_b90d7ede_8d91_4884_96d9_122140ad1297_cus_externalid')]",
                            "name": "Microsoft-HealthStateChange-Dest"
                        }
                    ]
                },
                "dataFlows": [
                    {
                        "streams": [
                            "Microsoft-HealthStateChange"
                        ],
                        "destinations": [
                            "Microsoft-HealthStateChange-Dest"
                        ]
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/dnszones",
            "apiVersion": "2018-05-01",
            "name": "[parameters('dnszones_smartpillmanager_live_name')]",
            "location": "global",
            "properties": {
                "zoneType": "Public"
            }
        },
        {
            "type": "Microsoft.Network/frontdoorwebapplicationfirewallpolicies",
            "apiVersion": "2020-11-01",
            "name": "[parameters('frontdoorwebapplicationfirewallpolicies_SPMpolicy_name')]",
            "location": "Global",
            "sku": {
                "name": "Classic_AzureFrontDoor"
            },
            "properties": {
                "policySettings": {
                    "enabledState": "Enabled",
                    "mode": "Prevention",
                    "redirectUrl": "http://aaronhoyt.com/gfy.asp",
                    "customBlockResponseStatusCode": 403,
                    "customBlockResponseBody": "WW91IGFyZSBjdXJyZW50bHkgbm90IEF1dGhvcml6ZWQgdG8gVXNlIHRoaXMgV0VCIEFQTExJQ0FUSU9OClN0YXkgVHVuZWQgZm9yIG1vcmUgaW5mbwotU1BNX1RlYW0=",
                    "requestBodyCheck": "Enabled"
                },
                "customRules": {
                    "rules": [
                        {
                            "name": "blockforeigntraffic",
                            "enabledState": "Enabled",
                            "priority": 1,
                            "ruleType": "MatchRule",
                            "rateLimitDurationInMinutes": 0,
                            "rateLimitThreshold": 0,
                            "matchConditions": [
                                {
                                    "matchVariable": "RemoteAddr",
                                    "operator": "GeoMatch",
                                    "negateCondition": true,
                                    "matchValue": [
                                        "LK"
                                    ],
                                    "transforms": []
                                }
                            ],
                            "action": "Redirect"
                        }
                    ]
                },
                "managedRules": {
                    "managedRuleSets": [
                        {
                            "ruleSetType": "Microsoft_DefaultRuleSet",
                            "ruleSetVersion": "1.1",
                            "ruleGroupOverrides": [],
                            "exclusions": []
                        },
                        {
                            "ruleSetType": "BotProtection",
                            "ruleSetVersion": "preview-0.1",
                            "ruleGroupOverrides": [],
                            "exclusions": []
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-11-01",
            "name": "[parameters('networkSecurityGroups_spm_backend_nsg_name')]",
            "location": "centralus",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 300,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "HTTP",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 320,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "HTTPS",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 340,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "ICMPinboundrule",
                        "properties": {
                            "protocol": "ICMP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 350,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "backend-port",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3900",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 360,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-11-01",
            "name": "[parameters('networkSecurityGroups_spmfrontendnsg249_name')]",
            "location": "centralus",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 300,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "https",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 330,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "name": "[parameters('privateDnsZones_privatelink_mongo_cosmos_azure_com_name')]",
            "location": "global",
            "properties": {
                "maxNumberOfRecordSets": 25000,
                "maxNumberOfVirtualNetworkLinks": 1000,
                "maxNumberOfVirtualNetworkLinksWithRegistration": 100,
                "numberOfRecordSets": 3,
                "numberOfVirtualNetworkLinks": 1,
                "numberOfVirtualNetworkLinksWithRegistration": 0,
                "provisioningState": "Succeeded"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "name": "[parameters('publicIPAddresses_spm_backend_ip_name')]",
            "location": "centralus",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "zones": [
                "1"
            ],
            "properties": {
                "ipAddress": "20.98.138.85",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "name": "[parameters('publicIPAddresses_spmfrontendip755_name')]",
            "location": "centralus",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "zones": [
                "1"
            ],
            "properties": {
                "ipAddress": "20.98.137.146",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "name": "[parameters('serverfarms_ASP_forLearning_8b2d_name')]",
            "location": "Central US",
            "sku": {
                "name": "Y1",
                "tier": "Dynamic",
                "size": "Y1",
                "family": "Y",
                "capacity": 0
            },
            "kind": "functionapp",
            "properties": {
                "perSiteScaling": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "name": "[parameters('serverfarms_ASP_forLearning_9ba4_name')]",
            "location": "Central US",
            "sku": {
                "name": "Y1",
                "tier": "Dynamic",
                "size": "Y1",
                "family": "Y",
                "capacity": 0
            },
            "kind": "functionapp",
            "properties": {
                "perSiteScaling": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0
            }
        },
        {
            "type": "microsoft.alertsmanagement/smartdetectoralertrules",
            "apiVersion": "2021-04-01",
            "name": "[parameters('smartdetectoralertrules_failure_anomalies___spm_databse_trigger_function_name')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_Application_Insights_Smart_Detection_name'))]"
            ],
            "properties": {
                "description": "Failure Anomalies notifies you of an unusual rise in the rate of failed HTTP requests or dependency calls.",
                "state": "Enabled",
                "severity": "Sev3",
                "frequency": "PT1M",
                "detector": {
                    "id": "FailureAnomaliesDetector"
                },
                "scope": [
                    "[parameters('components_spm_databse_trigger_function_externalid')]"
                ],
                "actionGroups": {
                    "groupIds": [
                        "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_Application_Insights_Smart_Detection_name'))]"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2020-12-01",
            "name": "[parameters('virtualMachines_spm_backend_name')]",
            "location": "centralus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_spm_backend140_name'))]"
            ],
            "zones": [
                "1"
            ],
            "identity": {
                "principalId": "9451c5bf-4cfa-47cf-adaa-64477885ae35",
                "tenantId": "638f94f5-958c-4e1b-bd47-7bb0307fc4c0",
                "type": "SystemAssigned"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_B1s"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "18_04-lts-gen2",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[concat(parameters('virtualMachines_spm_backend_name'), '_OsDisk_1_66db7e24b746472b9ba043648f2e34e3')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_spm_backend_name'), '_OsDisk_1_66db7e24b746472b9ba043648f2e34e3'))]"
                        }
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_spm_backend_name')]",
                    "adminUsername": "isuru",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": false,
                        "provisionVMAgent": true,
                        "patchSettings": {
                            "patchMode": "ImageDefault"
                        }
                    },
                    "secrets": [],
                    "allowExtensionOperations": true,
                    "requireGuestProvisionSignal": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_spm_backend140_name'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2020-12-01",
            "name": "[parameters('virtualMachines_spm_frontend_name')]",
            "location": "centralus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_spm_frontend92_name'))]"
            ],
            "zones": [
                "1"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_B1s"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "18_04-lts-gen2",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[concat(parameters('virtualMachines_spm_frontend_name'), '_OsDisk_1_33f6b7136073463cb0b3a299fadc6023')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS",
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_spm_frontend_name'), '_OsDisk_1_33f6b7136073463cb0b3a299fadc6023'))]"
                        },
                        "diskSizeGB": 30
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_spm_frontend_name')]",
                    "adminUsername": "isuru",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": false,
                        "provisionVMAgent": true,
                        "patchSettings": {
                            "patchMode": "ImageDefault"
                        }
                    },
                    "secrets": [],
                    "allowExtensionOperations": true,
                    "requireGuestProvisionSignal": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_spm_frontend92_name'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_SPM_getdata_function_name'), '/degradationindependencyduration')]",
            "location": "centralus",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_SPM_getdata_function_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "degradationindependencyduration",
                    "DisplayName": "Degradation in dependency duration",
                    "Description": "Smart Detection rules notify you of performance anomaly issues.",
                    "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": false,
                    "SupportsEmailNotifications": true
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_SPM_getdata_function_name'), '/degradationinserverresponsetime')]",
            "location": "centralus",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_SPM_getdata_function_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "degradationinserverresponsetime",
                    "DisplayName": "Degradation in server response time",
                    "Description": "Smart Detection rules notify you of performance anomaly issues.",
                    "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": false,
                    "SupportsEmailNotifications": true
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_SPM_getdata_function_name'), '/digestMailConfiguration')]",
            "location": "centralus",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_SPM_getdata_function_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "digestMailConfiguration",
                    "DisplayName": "Digest Mail Configuration",
                    "Description": "This rule describes the digest mail preferences",
                    "HelpUrl": "www.homail.com",
                    "IsHidden": true,
                    "IsEnabledByDefault": true,
                    "IsInPreview": false,
                    "SupportsEmailNotifications": true
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_SPM_getdata_function_name'), '/extension_billingdatavolumedailyspikeextension')]",
            "location": "centralus",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_SPM_getdata_function_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "extension_billingdatavolumedailyspikeextension",
                    "DisplayName": "Abnormal rise in daily data volume (preview)",
                    "Description": "This detection rule automatically analyzes the billing data generated by your application, and can warn you about an unusual increase in your application's billing costs",
                    "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/tree/master/SmartDetection/billing-data-volume-daily-spike.md",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": true,
                    "SupportsEmailNotifications": false
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_SPM_getdata_function_name'), '/extension_canaryextension')]",
            "location": "centralus",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_SPM_getdata_function_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "extension_canaryextension",
                    "DisplayName": "Canary extension",
                    "Description": "Canary extension",
                    "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/blob/master/SmartDetection/",
                    "IsHidden": true,
                    "IsEnabledByDefault": true,
                    "IsInPreview": true,
                    "SupportsEmailNotifications": false
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_SPM_getdata_function_name'), '/extension_exceptionchangeextension')]",
            "location": "centralus",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_SPM_getdata_function_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "extension_exceptionchangeextension",
                    "DisplayName": "Abnormal rise in exception volume (preview)",
                    "Description": "This detection rule automatically analyzes the exceptions thrown in your application, and can warn you about unusual patterns in your exception telemetry.",
                    "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/blob/master/SmartDetection/abnormal-rise-in-exception-volume.md",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": true,
                    "SupportsEmailNotifications": false
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_SPM_getdata_function_name'), '/extension_memoryleakextension')]",
            "location": "centralus",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_SPM_getdata_function_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "extension_memoryleakextension",
                    "DisplayName": "Potential memory leak detected (preview)",
                    "Description": "This detection rule automatically analyzes the memory consumption of each process in your application, and can warn you about potential memory leaks or increased memory consumption.",
                    "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/tree/master/SmartDetection/memory-leak.md",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": true,
                    "SupportsEmailNotifications": false
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_SPM_getdata_function_name'), '/extension_securityextensionspackage')]",
            "location": "centralus",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_SPM_getdata_function_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "extension_securityextensionspackage",
                    "DisplayName": "Potential security issue detected (preview)",
                    "Description": "This detection rule automatically analyzes the telemetry generated by your application and detects potential security issues.",
                    "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/blob/master/SmartDetection/application-security-detection-pack.md",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": true,
                    "SupportsEmailNotifications": false
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_SPM_getdata_function_name'), '/extension_traceseveritydetector')]",
            "location": "centralus",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_SPM_getdata_function_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "extension_traceseveritydetector",
                    "DisplayName": "Degradation in trace severity ratio (preview)",
                    "Description": "This detection rule automatically analyzes the trace logs emitted from your application, and can warn you about unusual patterns in the severity of your trace telemetry.",
                    "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/blob/master/SmartDetection/degradation-in-trace-severity-ratio.md",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": true,
                    "SupportsEmailNotifications": false
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_SPM_getdata_function_name'), '/longdependencyduration')]",
            "location": "centralus",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_SPM_getdata_function_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "longdependencyduration",
                    "DisplayName": "Long dependency duration",
                    "Description": "Smart Detection rules notify you of performance anomaly issues.",
                    "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": false,
                    "SupportsEmailNotifications": true
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_SPM_getdata_function_name'), '/migrationToAlertRulesCompleted')]",
            "location": "centralus",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_SPM_getdata_function_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "migrationToAlertRulesCompleted",
                    "DisplayName": "Migration To Alert Rules Completed",
                    "Description": "A configuration that controls the migration state of Smart Detection to Smart Alerts",
                    "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
                    "IsHidden": true,
                    "IsEnabledByDefault": false,
                    "IsInPreview": true,
                    "SupportsEmailNotifications": false
                },
                "enabled": false,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_SPM_getdata_function_name'), '/slowpageloadtime')]",
            "location": "centralus",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_SPM_getdata_function_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "slowpageloadtime",
                    "DisplayName": "Slow page load time",
                    "Description": "Smart Detection rules notify you of performance anomaly issues.",
                    "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": false,
                    "SupportsEmailNotifications": true
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_SPM_getdata_function_name'), '/slowserverresponsetime')]",
            "location": "centralus",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_SPM_getdata_function_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "slowserverresponsetime",
                    "DisplayName": "Slow server response time",
                    "Description": "Smart Detection rules notify you of performance anomaly issues.",
                    "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": false,
                    "SupportsEmailNotifications": true
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "Microsoft.Network/dnszones/CNAME",
            "apiVersion": "2018-05-01",
            "name": "[concat(parameters('dnszones_smartpillmanager_live_name'), '/afdverify')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/dnszones', parameters('dnszones_smartpillmanager_live_name'))]"
            ],
            "properties": {
                "TTL": 60,
                "CNAMERecord": {
                    "cname": "afdverify.smartpillmanager.azurefd.net"
                },
                "targetResource": {}
            }
        },
        {
            "type": "Microsoft.Network/dnszones/CNAME",
            "apiVersion": "2018-05-01",
            "name": "[concat(parameters('dnszones_smartpillmanager_live_name'), '/afdverify.www')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/dnszones', parameters('dnszones_smartpillmanager_live_name'))]"
            ],
            "properties": {
                "TTL": 60,
                "CNAMERecord": {
                    "cname": "afdverify.smartpillmanager.azurefd.net"
                },
                "targetResource": {}
            }
        },
        {
            "type": "Microsoft.Network/dnszones/NS",
            "apiVersion": "2018-05-01",
            "name": "[concat(parameters('dnszones_smartpillmanager_live_name'), '/@')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/dnszones', parameters('dnszones_smartpillmanager_live_name'))]"
            ],
            "properties": {
                "TTL": 172800,
                "NSRecords": [
                    {
                        "nsdname": "ns1-03.azure-dns.com."
                    },
                    {
                        "nsdname": "ns2-03.azure-dns.net."
                    },
                    {
                        "nsdname": "ns3-03.azure-dns.org."
                    },
                    {
                        "nsdname": "ns4-03.azure-dns.info."
                    }
                ],
                "targetResource": {}
            }
        },
        {
            "type": "Microsoft.Network/dnszones/SOA",
            "apiVersion": "2018-05-01",
            "name": "[concat(parameters('dnszones_smartpillmanager_live_name'), '/@')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/dnszones', parameters('dnszones_smartpillmanager_live_name'))]"
            ],
            "properties": {
                "TTL": 3600,
                "SOARecord": {
                    "email": "azuredns-hostmaster.microsoft.com",
                    "expireTime": 2419200,
                    "host": "ns1-03.azure-dns.com.",
                    "minimumTTL": 300,
                    "refreshTime": 3600,
                    "retryTime": 300,
                    "serialNumber": 1
                },
                "targetResource": {}
            }
        },
        {
            "type": "Microsoft.Network/frontdoors",
            "apiVersion": "2020-05-01",
            "name": "[parameters('frontdoors_smartpillmanager_name')]",
            "location": "Global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/frontdoorwebapplicationfirewallpolicies', parameters('frontdoorwebapplicationfirewallpolicies_SPMpolicy_name'))]"
            ],
            "properties": {
                "resourceState": "Enabled",
                "backendPools": [
                    {
                        "id": "[concat(resourceId('Microsoft.Network/frontdoors', parameters('frontdoors_smartpillmanager_name')), '/BackendPools/spm-backendPool')]",
                        "name": "spm-backendPool",
                        "properties": {
                            "backends": [
                                {
                                    "address": "20.98.137.146",
                                    "httpPort": 80,
                                    "httpsPort": 443,
                                    "priority": 1,
                                    "weight": 50,
                                    "backendHostHeader": "20.98.137.146",
                                    "enabledState": "Enabled"
                                }
                            ],
                            "healthProbeSettings": {
                                "id": "[concat(resourceId('Microsoft.Network/frontdoors', parameters('frontdoors_smartpillmanager_name')), '/HealthProbeSettings/healthProbeSettings-1621697078978')]"
                            },
                            "loadBalancingSettings": {
                                "id": "[concat(resourceId('Microsoft.Network/frontdoors', parameters('frontdoors_smartpillmanager_name')), '/LoadBalancingSettings/loadBalancingSettings-1621697078978')]"
                            },
                            "resourceState": "Enabled"
                        }
                    }
                ],
                "healthProbeSettings": [
                    {
                        "id": "[concat(resourceId('Microsoft.Network/frontdoors', parameters('frontdoors_smartpillmanager_name')), '/HealthProbeSettings/healthProbeSettings-1621697078978')]",
                        "name": "healthProbeSettings-1621697078978",
                        "properties": {
                            "intervalInSeconds": 30,
                            "path": "/",
                            "protocol": "Https",
                            "resourceState": "Enabled",
                            "enabledState": "Enabled",
                            "healthProbeMethod": "Head"
                        }
                    }
                ],
                "frontendEndpoints": [
                    {
                        "id": "[concat(resourceId('Microsoft.Network/frontdoors', parameters('frontdoors_smartpillmanager_name')), concat('/FrontendEndpoints/', parameters('frontdoors_smartpillmanager_name'), '-azurefd-net'))]",
                        "name": "[concat(parameters('frontdoors_smartpillmanager_name'), '-azurefd-net')]",
                        "properties": {
                            "hostName": "[concat(parameters('frontdoors_smartpillmanager_name'), '.azurefd.net')]",
                            "sessionAffinityEnabledState": "Disabled",
                            "sessionAffinityTtlSeconds": 0,
                            "webApplicationFirewallPolicyLink": {
                                "id": "[resourceId('Microsoft.Network/frontdoorwebapplicationfirewallpolicies', parameters('frontdoorwebapplicationfirewallpolicies_SPMpolicy_name'))]"
                            },
                            "resourceState": "Enabled"
                        }
                    },
                    {
                        "id": "[concat(resourceId('Microsoft.Network/frontdoors', parameters('frontdoors_smartpillmanager_name')), concat('/FrontendEndpoints/www-', parameters('frontdoors_smartpillmanager_name'), '-live'))]",
                        "name": "[concat('www-', parameters('frontdoors_smartpillmanager_name'), '-live')]",
                        "properties": {
                            "hostName": "[concat('www.', parameters('frontdoors_smartpillmanager_name'), '.live')]",
                            "sessionAffinityEnabledState": "Disabled",
                            "sessionAffinityTtlSeconds": 0,
                            "webApplicationFirewallPolicyLink": {
                                "id": "[resourceId('Microsoft.Network/frontdoorwebapplicationfirewallpolicies', parameters('frontdoorwebapplicationfirewallpolicies_SPMpolicy_name'))]"
                            },
                            "resourceState": "Enabled"
                        }
                    },
                    {
                        "id": "[concat(resourceId('Microsoft.Network/frontdoors', parameters('frontdoors_smartpillmanager_name')), concat('/FrontendEndpoints/', parameters('frontdoors_smartpillmanager_name'), '-live'))]",
                        "name": "[concat(parameters('frontdoors_smartpillmanager_name'), '-live')]",
                        "properties": {
                            "hostName": "[concat(parameters('frontdoors_smartpillmanager_name'), '.live')]",
                            "sessionAffinityEnabledState": "Disabled",
                            "sessionAffinityTtlSeconds": 0,
                            "resourceState": "Enabled"
                        }
                    }
                ],
                "loadBalancingSettings": [
                    {
                        "id": "[concat(resourceId('Microsoft.Network/frontdoors', parameters('frontdoors_smartpillmanager_name')), '/LoadBalancingSettings/loadBalancingSettings-1621697078978')]",
                        "name": "loadBalancingSettings-1621697078978",
                        "properties": {
                            "additionalLatencyMilliseconds": 0,
                            "sampleSize": 4,
                            "successfulSamplesRequired": 2,
                            "resourceState": "Enabled"
                        }
                    }
                ],
                "routingRules": [
                    {
                        "id": "[concat(resourceId('Microsoft.Network/frontdoors', parameters('frontdoors_smartpillmanager_name')), '/RoutingRules/spm-rule')]",
                        "name": "spm-rule",
                        "properties": {
                            "frontendEndpoints": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/frontdoors', parameters('frontdoors_smartpillmanager_name')), concat('/FrontendEndpoints/', parameters('frontdoors_smartpillmanager_name'), '-azurefd-net'))]"
                                }
                            ],
                            "acceptedProtocols": [
                                "Https"
                            ],
                            "patternsToMatch": [
                                "/*"
                            ],
                            "enabledState": "Enabled",
                            "resourceState": "Enabled",
                            "routeConfiguration": {
                                "@odata.type": "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration",
                                "forwardingProtocol": "HttpsOnly",
                                "backendPool": {
                                    "id": "[concat(resourceId('Microsoft.Network/frontdoors', parameters('frontdoors_smartpillmanager_name')), '/BackendPools/spm-backendPool')]"
                                }
                            }
                        }
                    },
                    {
                        "id": "[concat(resourceId('Microsoft.Network/frontdoors', parameters('frontdoors_smartpillmanager_name')), '/RoutingRules/spm-rule-1')]",
                        "name": "spm-rule-1",
                        "properties": {
                            "frontendEndpoints": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/frontdoors', parameters('frontdoors_smartpillmanager_name')), concat('/frontendendpoints/www-', parameters('frontdoors_smartpillmanager_name'), '-live'))]"
                                }
                            ],
                            "acceptedProtocols": [
                                "Https"
                            ],
                            "patternsToMatch": [
                                "/*"
                            ],
                            "enabledState": "Enabled",
                            "resourceState": "Enabled",
                            "routeConfiguration": {
                                "@odata.type": "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration",
                                "forwardingProtocol": "HttpsOnly",
                                "backendPool": {
                                    "id": "[concat(resourceId('Microsoft.Network/frontdoors', parameters('frontdoors_smartpillmanager_name')), '/BackendPools/spm-backendPool')]"
                                }
                            }
                        }
                    },
                    {
                        "id": "[concat(resourceId('Microsoft.Network/frontdoors', parameters('frontdoors_smartpillmanager_name')), '/RoutingRules/spm3')]",
                        "name": "spm3",
                        "properties": {
                            "frontendEndpoints": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/frontdoors', parameters('frontdoors_smartpillmanager_name')), concat('/frontendendpoints/', parameters('frontdoors_smartpillmanager_name'), '-live'))]"
                                }
                            ],
                            "acceptedProtocols": [
                                "Http",
                                "Https"
                            ],
                            "patternsToMatch": [
                                "/*"
                            ],
                            "enabledState": "Enabled",
                            "resourceState": "Enabled",
                            "routeConfiguration": {
                                "@odata.type": "#Microsoft.Azure.FrontDoor.Models.FrontdoorRedirectConfiguration",
                                "customHost": "[concat('www.', parameters('frontdoors_smartpillmanager_name'), '.live')]",
                                "redirectProtocol": "MatchRequest",
                                "redirectType": "PermanentRedirect"
                            }
                        }
                    }
                ],
                "backendPoolsSettings": {
                    "enforceCertificateNameCheck": "Disabled",
                    "sendRecvTimeoutSeconds": 30
                },
                "enabledState": "Enabled",
                "friendlyName": "[parameters('frontdoors_smartpillmanager_name')]"
            }
        },
        {
            "type": "Microsoft.Network/frontdoors/rulesengines",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('frontdoors_smartpillmanager_name'), '/spmrulesengine')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/frontdoors', parameters('frontdoors_smartpillmanager_name'))]"
            ],
            "properties": {
                "resourceState": "Enabled",
                "rules": [
                    {
                        "priority": 0,
                        "name": "http2https",
                        "matchProcessingBehavior": "Continue",
                        "action": {
                            "requestHeaderActions": [],
                            "responseHeaderActions": [],
                            "routeConfigurationOverride": {
                                "@odata.type": "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration",
                                "customForwardingPath": "/*",
                                "forwardingProtocol": "HttpsOnly",
                                "backendPool": {
                                    "id": "[concat(resourceId('Microsoft.Network/frontdoors', parameters('frontdoors_smartpillmanager_name')), '/BackendPools/spm-backendPool')]"
                                }
                            }
                        },
                        "matchConditions": [
                            {
                                "rulesEngineMatchValue": [
                                    "HTTPS"
                                ],
                                "rulesEngineMatchVariable": "RequestScheme",
                                "rulesEngineOperator": "Equal",
                                "transforms": [],
                                "negateCondition": true
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('networkSecurityGroups_spm_backend_nsg_name'), '/backend-port')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_spm_backend_nsg_name'))]"
            ],
            "properties": {
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "3900",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 360,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('networkSecurityGroups_spm_backend_nsg_name'), '/HTTP')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_spm_backend_nsg_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "80",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 320,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('networkSecurityGroups_spmfrontendnsg249_name'), '/https')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_spmfrontendnsg249_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "443",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 330,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('networkSecurityGroups_spm_backend_nsg_name'), '/HTTPS')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_spm_backend_nsg_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "443",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 340,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('networkSecurityGroups_spm_backend_nsg_name'), '/ICMPinboundrule')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_spm_backend_nsg_name'))]"
            ],
            "properties": {
                "protocol": "ICMP",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 350,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('networkSecurityGroups_spm_backend_nsg_name'), '/SSH')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_spm_backend_nsg_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 300,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('networkSecurityGroups_spmfrontendnsg249_name'), '/SSH')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_spmfrontendnsg249_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 300,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_mongo_cosmos_azure_com_name'), '/spm-db')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_mongo_cosmos_azure_com_name'))]"
            ],
            "properties": {
                "ttl": 3600,
                "aRecords": [
                    {
                        "ipv4Address": "10.0.2.5"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_mongo_cosmos_azure_com_name'), '/spm-db-centralus')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_mongo_cosmos_azure_com_name'))]"
            ],
            "properties": {
                "ttl": 3600,
                "aRecords": [
                    {
                        "ipv4Address": "10.0.2.6"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/SOA",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_mongo_cosmos_azure_com_name'), '/@')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_mongo_cosmos_azure_com_name'))]"
            ],
            "properties": {
                "ttl": 3600,
                "soaRecord": {
                    "email": "azureprivatedns-host.microsoft.com",
                    "expireTime": 2419200,
                    "host": "azureprivatedns.net",
                    "minimumTtl": 10,
                    "refreshTime": 3600,
                    "retryTime": 300,
                    "serialNumber": 1
                }
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[parameters('sites_SPM_functionapp_name')]",
            "location": "Central US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ASP_forLearning_8b2d_name'))]"
            ],
            "kind": "functionapp",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "spm-functionapp.azurewebsites.net",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "spm-functionapp.scm.azurewebsites.net",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ASP_forLearning_8b2d_name'))]",
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "siteConfig": {},
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 1536,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": false,
                "redundancyMode": "None"
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_SPM_functionapp_name'), '/web')]",
            "location": "Central US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_SPM_functionapp_name'))]"
            ],
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php"
                ],
                "netFrameworkVersion": "v4.0",
                "phpVersion": "5.6",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$SPM-functionapp",
                "azureStorageAccounts": {},
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false
                    }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "ftpsState": "AllAllowed",
                "reservedInstanceCount": 0
            }
        },
        {
            "type": "Microsoft.Web/sites/functions",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_SPM_functionapp_name'), '/HttpTrigger2')]",
            "location": "Central US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_SPM_functionapp_name'))]"
            ],
            "properties": {
                "script_root_path_href": "https://spm-functionapp.azurewebsites.net/admin/vfs/site/wwwroot/HttpTrigger2/",
                "script_href": "https://spm-functionapp.azurewebsites.net/admin/vfs/site/wwwroot/HttpTrigger2/index.js",
                "config_href": "https://spm-functionapp.azurewebsites.net/admin/vfs/site/wwwroot/HttpTrigger2/function.json",
                "href": "https://spm-functionapp.azurewebsites.net/admin/functions/HttpTrigger2",
                "config": {},
                "test_data": "{\"method\":\"post\",\"queryStringParams\":[],\"headers\":[],\"body\":\"{\\n  \\\"name\\\": \\\"12345\\\"\\n}\"}"
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_SPM_functionapp_name'), '/', parameters('sites_SPM_functionapp_name'), '.azurewebsites.net')]",
            "location": "Central US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_SPM_functionapp_name'))]"
            ],
            "properties": {
                "siteName": "SPM-functionapp",
                "hostNameType": "Verified"
            }
        },
        {
            "type": "microsoft.alertsmanagement/smartdetectoralertrules",
            "apiVersion": "2021-04-01",
            "name": "[parameters('smartdetectoralertrules_failure_anomalies___spm_getdata_function_name')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_SPM_getdata_function_name'))]",
                "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_Application_Insights_Smart_Detection_name'))]"
            ],
            "properties": {
                "description": "Failure Anomalies notifies you of an unusual rise in the rate of failed HTTP requests or dependency calls.",
                "state": "Enabled",
                "severity": "Sev3",
                "frequency": "PT1M",
                "detector": {
                    "id": "FailureAnomaliesDetector"
                },
                "scope": [
                    "[resourceId('microsoft.insights/components', parameters('components_SPM_getdata_function_name'))]"
                ],
                "actionGroups": {
                    "groupIds": [
                        "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_Application_Insights_Smart_Detection_name'))]"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/dnszones/A",
            "apiVersion": "2018-05-01",
            "name": "[concat(parameters('dnszones_smartpillmanager_live_name'), '/@')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/dnszones', parameters('dnszones_smartpillmanager_live_name'))]",
                "[resourceId('Microsoft.Network/frontdoors', parameters('frontdoors_smartpillmanager_name'))]"
            ],
            "properties": {
                "TTL": 60,
                "targetResource": {
                    "id": "[resourceId('Microsoft.Network/frontdoors', parameters('frontdoors_smartpillmanager_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/dnszones/CNAME",
            "apiVersion": "2018-05-01",
            "name": "[concat(parameters('dnszones_smartpillmanager_live_name'), '/www')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/dnszones', parameters('dnszones_smartpillmanager_live_name'))]",
                "[resourceId('Microsoft.Network/frontdoors', parameters('frontdoors_smartpillmanager_name'))]"
            ],
            "properties": {
                "TTL": 60,
                "targetResource": {
                    "id": "[resourceId('Microsoft.Network/frontdoors', parameters('frontdoors_smartpillmanager_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_mongo_cosmos_azure_com_name'), '/danhcngcpssdi')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_mongo_cosmos_azure_com_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_SPM_Virtual_Network_name'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_SPM_Virtual_Network_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-11-01",
            "name": "[parameters('virtualNetworks_SPM_Virtual_Network_name')]",
            "location": "centralus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_spm_backend_nsg_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_spmfrontendnsg249_name'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "private",
                        "properties": {
                            "addressPrefix": "10.0.2.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_spm_backend_nsg_name'))]"
                            },
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "public",
                        "properties": {
                            "addressPrefix": "10.0.1.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_spmfrontendnsg249_name'))]"
                            },
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('virtualNetworks_SPM_Virtual_Network_name'), '/private')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_SPM_Virtual_Network_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_spm_backend_nsg_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.2.0/24",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_spm_backend_nsg_name'))]"
                },
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('virtualNetworks_SPM_Virtual_Network_name'), '/public')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_SPM_Virtual_Network_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_spmfrontendnsg249_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.1.0/24",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_spmfrontendnsg249_name'))]"
                },
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-11-01",
            "name": "[parameters('networkInterfaces_spm_backend140_name')]",
            "location": "centralus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_spm_backend_ip_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_SPM_Virtual_Network_name'), 'private')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_spm_backend_nsg_name'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "10.0.2.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_spm_backend_ip_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_SPM_Virtual_Network_name'), 'private')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_spm_backend_nsg_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-11-01",
            "name": "[parameters('networkInterfaces_spm_frontend92_name')]",
            "location": "centralus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_spmfrontendip755_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_SPM_Virtual_Network_name'), 'public')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_spmfrontendnsg249_name'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "10.0.1.5",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_spmfrontendip755_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_SPM_Virtual_Network_name'), 'public')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_spmfrontendnsg249_name'))]"
                }
            }
        }
    ]
}